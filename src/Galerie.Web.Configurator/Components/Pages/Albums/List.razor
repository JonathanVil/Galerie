@page "/Albums"

@using Ardalis.GuardClauses
@using Galerie.Application.Albums.Queries.GetAlbum
@using Galerie.Application.Albums.Queries.GetUserAlbums
@using MediatR
@using Microsoft.AspNetCore.Authorization

@inject ISender Sender

@attribute [Authorize]

<PageTitle>Albums</PageTitle>

<Heading>Albums</Heading>

@if (_albums == null)
{
    <Spinner/>
}
else if (_albums.Any())
{
    <div class="grid grid-flow-col gap-4 mb-4">
        @foreach (var album in _albums)
        {
            <div class="max-w-sm bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
                <img class="rounded-t-lg" src="/docs/images/blog/image-1.jpg" alt=""/>
                <div class="p-5">
                    <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">@album.Title</h5>
                    <p class="text-sm text-gray-700 dark:text-gray-400">@album.NumberOfPhotos photos</p>
                    <p class="mb-3 font-normal text-gray-700 dark:text-gray-400">@album.Description</p>
                    <Button Href="@($"albums/{album.Id}/edit")" Class="inline-flex items-center px-3 py-2">
                        Edit
                        <svg class="rtl:rotate-180 w-3.5 h-3.5 ms-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
                        </svg>
                    </Button>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No albums found.</p>
}

<Button Href="Albums/Create">Create album</Button>

@code {

    private IReadOnlyCollection<AlbumDto>? _albums;

    protected override async Task OnInitializedAsync()
    {
        var result = await Sender.Send(new GetMyAlbumsQuery());
        _albums = Guard.Against.Null(result);
    }

}