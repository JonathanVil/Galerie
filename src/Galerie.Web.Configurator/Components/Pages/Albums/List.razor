@page "/Albums"

@using Ardalis.GuardClauses
@using Galerie.Application.Albums.Queries.GetAlbum
@using Galerie.Application.Albums.Queries.GetUserAlbums
@using MediatR
@using Microsoft.AspNetCore.Authorization

@inject ISender Sender

@attribute [Authorize]

<PageTitle>Albums</PageTitle>

<h1>Albums</h1>

@if (_albums == null)
{
    <Spinner/>
}
else if (_albums.Any())
{
    @foreach (var album in _albums)
    {
        <p>Title: @album.Title</p>
        <p>Description: @album.Description</p>
        <p>Cover URL: @album.CoverUrl</p>
        <p>Photos #: @album.NumberOfPhotos</p>
        <p>Created: @album.Created</p>
        <p>Last modified: @album.LastModified</p>
    }
}
else
{
    <p>No albums found.</p>
}

<a href="Albums/Create">
    <button>Create Album</button>
</a>


@code {

    private IReadOnlyCollection<AlbumDto>? _albums;

    protected override async Task OnInitializedAsync()
    {
        var result = await Sender.Send(new GetMyAlbumsQuery());
        _albums = Guard.Against.Null(result);
    }

}